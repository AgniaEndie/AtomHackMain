apiVersion: apps/v1
kind: Deployment
metadata:
  name: camera-registry-deployment
spec:
  selector:
    matchLabels:
      app: camera-registry
  replicas: 3
  template:
    metadata:
      labels:
        app: camera-registry
    spec:
      containers:
        - name: camera-registry
          image: endienasg/camera-registry:main

          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "root"
---
apiVersion: v1
kind: Service
metadata:
  name: camera-registry-service
spec:
  selector:
    app: camera-registry
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30081
  type: NodePort
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-camera-registry-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-camera-registry
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: foxstudios
            - name: POSTGRES_PASSWORD
              value: root
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "mendix-pgdata"
      volumes:
        - hostPath:
            path: "/home/docker/pgdata"
          name: mendix-pgdata

  selector:
    matchLabels:
      app: postgres-camera-registry
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-camera-registry-service
  labels:
    env: prod
    owner: endienasg
spec:
  type: NodePort
  selector:
    app: postgres-camera-registry
  ports:
    - name: http
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30013

---

